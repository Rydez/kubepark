package base

import (
	"github.com/prometheus/client_golang/prometheus"
)

var Metrics = struct {
	Revenue            prometheus.Counter
	Fee                prometheus.Gauge
	IsAttractionClosed prometheus.Gauge
	AttractionAttempts prometheus.CounterVec
}{
	Revenue: prometheus.NewCounter(prometheus.CounterOpts{
		Name: "revenue",
		Help: "Total revenue generated by the attraction",
	}),

	Fee: prometheus.NewGauge(prometheus.GaugeOpts{
		Name: "fee",
		Help: "Current fee for using the attraction",
	}),

	IsAttractionClosed: prometheus.NewGauge(prometheus.GaugeOpts{
		Name: "is_closed",
		Help: "Whether the attraction is closed (1) or open (0)",
	}),

	AttractionAttempts: *prometheus.NewCounterVec(
		prometheus.CounterOpts{
			Name: "attempts",
			Help: "Number of attempts to use the attraction",
		},
		[]string{"success", "reason"},
	),
}

// RegisterAttractionMetrics registers all attraction-specific metrics
func RegisterAttractionMetrics(r *prometheus.Registry) {
	r.MustRegister(Metrics.Revenue)
	r.MustRegister(Metrics.Fee)
	r.MustRegister(Metrics.IsAttractionClosed)
	r.MustRegister(Metrics.AttractionAttempts)
}
